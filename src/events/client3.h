#pragma once
#include <uv.h>

typedef enum
{
    UVHTTP_CLIENT_STATUS_INITED,
    UVHTTP_CLIENT_STATUS_REQUESTING,
    UVHTTP_CLIENT_STATUS_REQUEST_END,
    UVHTTP_CLIENT_STATUS_CLOSING,
    UVHTTP_CLIENT_STATUS_CLOSED
} uvhttp_client_status;


typedef enum {
    UVHTTP_OK = 0,
    UVHTTP_ERROR_FAILED = -1,
    UVHTTP_ERROR_NOOPTIONS = -2,
    UVHTTP_ERROR_PARAMS_INVALID = -3,
    UVHTTP_ERROR_HTTP_PARSER = -4,
    UVHTTP_ERROR_PEER_CLOSED = -5,
    UVHTTP_ERROR_NO_BUFFERS = -6,
    UVHTTP_ERROR_WRITE_WAIT = -7,
    UVHTTP_ERROR_URL_PARSE = -8,
    UVHTTP_ERROR_HOSTNAME_TOOLONG = -9,
    UVHTTP_ERROR_REQUEST_NOTEND = -10
} uvhttp_error_code;
    
typedef void* uvhttp_client;

typedef enum {
    UVHTTP_CLT_OPT_USER_DATA,
    UVHTTP_CLT_OPT_RESPONSE_CB,
    UVHTTP_CLT_OPT_RESPONSE_BODY_READ_CB,
    UVHTTP_CLT_OPT_REQUEST_BODY_WRITE_CB,
    UVHTTP_CLT_OPT_RESPONSE_END_CB,
    UVHTTP_CLT_OPT_END_CB
} uvhttp_client_option;

typedef enum {
    UVHTTP_CLT_INFO_USER_DATA,
    UVHTTP_CLT_INFO_UVTCP,
    UVHTTP_CLT_INFO_LOOP,
    UVHTTP_CLT_INFO_MESSAGE
} uvhttp_client_info;
